<?xml version="1.0" encoding="utf-8"?>
<ClassDiagram MajorVersion="1" MinorVersion="1">
  <Comment CommentText="Decorator/Wrapper Entwurfsmuster - Ein Decorator wird zwischen das original Objekt und den Aufrufer geschaltet um zusätzliche Aktionen bei Methodenaufrufen zu realisieren (z.B. Logging)&#xD;&#xA;&#xD;&#xA;Damit der Decorator das original ersetzen kann muss er von der selben Klasse abgeleitet sein (Vererbung). Um die Aufrufe weiter delegieren zu können muss er ein Objekt der Klasse besitzen (Aggregation).">
    <Position X="3.632" Y="1.5" Height="1.975" Width="4.262" />
  </Comment>
  <Class Name="_06___Proxy_Entwurfsmuster.Auto">
    <Position X="1" Y="0.75" Width="1.5" />
    <TypeIdentifier>
      <HashCode>EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAgAAAA=</HashCode>
      <FileName>Auto.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="_06___Proxy_Entwurfsmuster.LoggingAutoProxy">
    <Position X="0.75" Y="3.5" Width="2" />
    <InheritanceLine Type="_06___Proxy_Entwurfsmuster.Auto" FixedFromPoint="true" FixedToPoint="true">
      <Path>
        <Point X="1.375" Y="2.497" />
        <Point X="1.375" Y="3.125" />
        <Point X="1.25" Y="3.125" />
        <Point X="1.25" Y="3.5" />
      </Path>
    </InheritanceLine>
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAA=</HashCode>
      <FileName>LoggingAutoProxy.cs</FileName>
    </TypeIdentifier>
    <ShowAsAssociation>
      <Field Name="_auto" />
    </ShowAsAssociation>
  </Class>
  <Font Name="Segoe UI" Size="9" />
</ClassDiagram>